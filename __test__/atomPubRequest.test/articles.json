[
  {
    "id": "26006613568876375",
    "customUrl": "hello-new",
    "title": "新規投稿記事",
    "date": "2019-09-16T16:37:00.000Z",
    "editedDate": "2020-05-16T14:32:25.000Z",
    "text": "   TL;DR 初投稿に際して自分に向けたポエム\n\n記事を書くためにブログを作った。\n\nブログをはじめるにあたり、はじめるに至った理由を綴る。\n(自分に書く価値を再認識させることで、記事を書く動機を強める狙い)\n\n## ブログを書く意義\nasdfas\n### 文章執筆\n\nわかりやすく完結な文章を書くには推敲した上である程度時間を掛ける必要がある。\n文章の執筆能力を高めるためにブログを書くことにした。\n\n### 思考を整理する\n\n最近アウトプットすることの重要性に気づいた。\n\nアウトプットする事柄は、自分の中で理解し整理されているものでなければならない。\n今までの私は、こと情報系に関してインプットの機会が多かった。\nだからこそ自分の文章を公開することで、インプットした内容を整理する機会としたい。\n\n### 誰かのために\n\n私は開発していて詰まることがよくある。例えば「ライブラリを入れたけど動かない」「エラーを吐いて動かない」等。\n\nこのような私が開発していて詰まったことと解決策を記録することで、同じ問題を抱えている誰か(もしくは未来の私)に向けたヒントになればという思いがある。\n\n私が解決策を示す文章を書く手間が、私や誰かが問題解決にかける手間より小さいならば、とても価値のある記事がかけたということである。\n\n## まとめ\n\nそんなわけで、次の目的で思ったことや知ったことを書き留めていきたい。\n\n- 文章執筆の場\n- 思考を整理する場\n- 誰かのためにハウツーを記録する場\n\n  \n",
    "categories": [
      "ポエム"
    ],
    "draft": false
  },
  {
    "id": "26006613568865965",
    "customUrl": "2020/05/13/122736",
    "title": "猫の広告文",
    "date": "2020-05-13T03:27:36.000Z",
    "editedDate": "2020-05-16T14:14:18.000Z",
    "text": "猫の広告文\n夏目漱石\n\n\n\n　吾輩は猫である。名前はまだない。主人は教師である。迷亭は美学者、寒月は理学者、いづれも当代の変人、太平の逸民である。吾輩は幸にして此諸先生の知遇を辱〔かたじけの〕ふするを得てこゝに其平生を読者に紹介するの光栄を有するのである。……吾輩は又猫相応の敬意を以て金田令夫人の鼻の高さを読者に報道し得るを一生の面目と思ふのである。……\n\n\n\n\n底本：「漱石全集　第十六巻」岩波書店 \n　　　1995（平成7）年4月19日発行\n初出：「東京朝日新聞」\n　　　1905（明治38）年11月15日\n※初出として掲げたもの以外にも、各紙に掲載された。それらの間には、わずかな異同がある。\n※底本のテキストは、「吾輩ハ猫デアル」の発行者の一人、服部国太郎宛葉書（天理大学附属天理図書館蔵）による。\n※亀甲かっこ〔〕付きのルビは底本編集部によるもので、現代仮名遣いである。\n（例）知遇を辱〔かたじけの〕ふするを得て\n入力：砂場清隆\n校正：小林繁雄\n2003年3月31日作成\n青空文庫作成ファイル：\nこのファイルは、インターネットの図書館、青空文庫（http://www.aozora.gr.jp/）で作られました。入力、校正、制作にあたったのは、ボランティアの皆さんです。\n",
    "categories": [],
    "draft": false
  },
  {
    "id": "26006613566848996",
    "customUrl": "2010/01/01/000000",
    "title": "dummy",
    "date": "2009-12-31T15:00:00.000Z",
    "editedDate": "2020-05-13T05:27:04.000Z",
    "text": "dummy\n",
    "categories": [],
    "draft": false
  },
  {
    "id": "26006613566779962",
    "customUrl": "2020/05/13/122622",
    "title": "星めぐりの歌",
    "date": "2020-05-13T03:26:22.000Z",
    "editedDate": "2020-05-13T03:26:22.000Z",
    "text": "# 星めぐりの歌\n\n宮澤賢治\n\n```\nあかいめだまの　さそり\nひろげた鷲の　　つばさ\nあをいめだまの　小いぬ、\nひかりのへびの　とぐろ。\n\nオリオンは高く　うたひ\nつゆとしもとを　おとす、\nアンドロメダの　くもは\nさかなのくちの　かたち。\n\n大ぐまのあしを　きたに\n五つのばした　　ところ。\n小熊のひたいの　うへは\nそらのめぐりの　めあて。\n```\n\n\n\n底本：「【新】校本宮澤賢治全集　第六巻　詩5［＃「5」はローマ数字、1-13-25］　本文篇」筑摩書房\n　　　1996（平成8）年5月30日初版第1刷発行\n入力：田中敬三\n校正：土屋隆\n2006年7月26日作成\n青空文庫作成ファイル：\nこのファイルは、インターネットの図書館、青空文庫（http://www.aozora.gr.jp/）で作られました。入力、校正、制作にあたったのは、ボランティアの皆さんです。\n",
    "categories": [],
    "draft": false
  },
  {
    "id": "26006613566778012",
    "customUrl": "2020/05/13/122220",
    "title": "雨ニモマケズ HTML埋め込み",
    "date": "2020-05-13T03:22:20.000Z",
    "editedDate": "2020-05-13T03:22:20.000Z",
    "text": "```html\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\n<!-- saved from url=(0060)https://www.aozora.gr.jp/cards/000081/files/45630_23908.html -->\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"ja\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=Shift_JIS\">\n\t\n\t<meta http-equiv=\"content-style-type\" content=\"text/css\">\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"./宮澤賢治 〔雨ニモマケズ〕_files/aozora.css\">\n\t<title>宮澤賢治 〔雨ニモマケズ〕</title>\n\t<script type=\"text/javascript\" src=\"./宮澤賢治 〔雨ニモマケズ〕_files/jquery-1.4.2.min.js\"></script>\n  <link rel=\"Schema.DC\" href=\"http://purl.org/dc/elements/1.1/\">\n\t<meta name=\"DC.Title\" content=\"〔雨ニモマケズ〕\">\n\t<meta name=\"DC.Creator\" content=\"宮澤賢治\">\n\t<meta name=\"DC.Publisher\" content=\"青空文庫\">\n</head>\n<body data-gr-c-s-loaded=\"true\">\n<div class=\"metadata\">\n<h1 class=\"title\">〔雨ニモマケズ〕</h1>\n<h2 class=\"author\">宮澤賢治</h2>\n<br>\n<br>\n</div>\n<div id=\"contents\" style=\"display:none\"></div><div class=\"main_text\"><br>\n雨ニモマケズ<br>\n風ニモマケズ<br>\n雪ニモ夏ノ暑サニモマケヌ<br>\n丈夫ナカラダヲモチ<br>\n慾ハナク<br>\n決シテ瞋ラズ<br>\nイツモシヅカニワラッテヰル<br>\n一日ニ玄米四合ト<br>\n味噌ト少シノ野菜ヲタベ<br>\nアラユルコトヲ<br>\nジブンヲカンジョウニ入レズニ<br>\nヨクミキキシワカリ<br>\nソシテワスレズ<br>\n野原ノ松ノ林ノ<img src=\"./宮澤賢治 〔雨ニモマケズ〕_files/2-86-78.png\" alt=\"※(「「蔭」の「陰のつくり」に代えて「人がしら／髟のへん」、第4水準2-86-78)\" class=\"gaiji\">ノ<br>\n小サナ萓ブキノ小屋ニヰテ<br>\n東ニ病気ノコドモアレバ<br>\n行ッテ看病シテヤリ<br>\n西ニツカレタ母アレバ<br>\n行ッテソノ稲ノ朿ヲ<span class=\"notes\">［＃「朿ヲ」はママ］</span>負ヒ<br>\n南ニ死ニサウナ人アレバ<br>\n行ッテコハガラナクテモイヽトイヒ<br>\n北ニケンクヮヤソショウガアレバ<br>\nツマラナイカラヤメロトイヒ<br>\nヒドリノトキハナミダヲナガシ<br>\nサムサノナツハオロオロアルキ<br>\nミンナニデクノボートヨバレ<br>\nホメラレモセズ<br>\nクニモサレズ<br>\nサウイフモノニ<br>\nワタシハナリタイ<br>\n<br>\n南無無辺行菩薩<br>\n南無上行菩薩<br>\n南無多宝如来<br>\n南無妙法蓮華経<br>\n南無釈迦牟尼仏<br>\n南無浄行菩薩<br>\n南無安立行菩薩<br>\n<br>\n<br>\n<br>\n</div>\n<div class=\"bibliographical_information\">\n<hr>\n<br>\n底本：「【新】校本宮澤賢治全集　第十三巻（上）覚書・手帳　本文篇」筑摩書房<br>\n　　　1997（平成9）年7月30日初版第1刷発行<br>\n※本文については写真版を含む本書によった。また、改行等の全体の体裁については、「【新】校本宮澤賢治全集　第六巻」筑摩書房1996（平成8）年5月30日初版第1刷発行を参照した。<br>\n入力：田中敬三<br>\n校正：土屋隆<br>\n2006年7月26日作成<br>\n2019年1月21日修正<br>\n青空文庫作成ファイル：<br>\nこのファイルは、インターネットの図書館、青空文庫（https://www.aozora.gr.jp/）で作られました。入力、校正、制作にあたったのは、ボランティアの皆さんです。<br>\n<br>\n<br>\n</div>\n<div class=\"notation_notes\">\n<hr>\n<br>\n●表記について<br>\n<ul>\n\t<li>このファイルは W3C 勧告 XHTML1.1 にそった形式で作成されています。</li>\n\t<li>［＃…］は、入力者による注を表す記号です。</li>\n\t<li>「くの字点」をのぞくJIS X 0213にある文字は、画像化して埋め込みました。</li>\n</ul>\n</div>\n<div id=\"card\" style=\"display: block;\">\n<hr>\n<br>\n<a href=\"JavaScript:goLibCard();\" id=\"goAZLibCard\">●図書カード</a><script type=\"text/javascript\" src=\"./宮澤賢治 〔雨ニモマケズ〕_files/contents.js\"></script>\n<script type=\"text/javascript\" src=\"./宮澤賢治 〔雨ニモマケズ〕_files/golibcard.js\"></script>\n</div>\n\n</body></html>\n```\n",
    "categories": [],
    "draft": false
  },
  {
    "id": "26006613566777790",
    "customUrl": "2020/05/13/122148",
    "title": "雨ニモマケズ",
    "date": "2020-05-13T03:21:48.000Z",
    "editedDate": "2020-05-13T03:21:48.000Z",
    "text": "<div class=\"metadata\">\n<h1 class=\"title\">〔雨ニモマケズ〕</h1>\n<h2 class=\"author\">宮澤賢治</h2>\n<br>\n<br>\n</div>\n<div id=\"contents\" style=\"display:none\"></div><div class=\"main_text\"><br>\n雨ニモマケズ<br>\n風ニモマケズ<br>\n雪ニモ夏ノ暑サニモマケヌ<br>\n丈夫ナカラダヲモチ<br>\n慾ハナク<br>\n決シテ瞋ラズ<br>\nイツモシヅカニワラッテヰル<br>\n一日ニ玄米四合ト<br>\n味噌ト少シノ野菜ヲタベ<br>\nアラユルコトヲ<br>\nジブンヲカンジョウニ入レズニ<br>\nヨクミキキシワカリ<br>\nソシテワスレズ<br>\n野原ノ松ノ林ノ<img src=\"./宮澤賢治 〔雨ニモマケズ〕_files/2-86-78.png\" alt=\"※(「「蔭」の「陰のつくり」に代えて「人がしら／髟のへん」、第4水準2-86-78)\" class=\"gaiji\">ノ<br>\n小サナ萓ブキノ小屋ニヰテ<br>\n東ニ病気ノコドモアレバ<br>\n行ッテ看病シテヤリ<br>\n西ニツカレタ母アレバ<br>\n行ッテソノ稲ノ朿ヲ<span class=\"notes\">［＃「朿ヲ」はママ］</span>負ヒ<br>\n南ニ死ニサウナ人アレバ<br>\n行ッテコハガラナクテモイヽトイヒ<br>\n北ニケンクヮヤソショウガアレバ<br>\nツマラナイカラヤメロトイヒ<br>\nヒドリノトキハナミダヲナガシ<br>\nサムサノナツハオロオロアルキ<br>\nミンナニデクノボートヨバレ<br>\nホメラレモセズ<br>\nクニモサレズ<br>\nサウイフモノニ<br>\nワタシハナリタイ<br>\n<br>\n南無無辺行菩薩<br>\n南無上行菩薩<br>\n南無多宝如来<br>\n南無妙法蓮華経<br>\n南無釈迦牟尼仏<br>\n南無浄行菩薩<br>\n南無安立行菩薩<br>\n<br>\n<br>\n<br>\n</div>\n<div class=\"bibliographical_information\">\n<hr>\n<br>\n底本：「【新】校本宮澤賢治全集　第十三巻（上）覚書・手帳　本文篇」筑摩書房<br>\n　　　1997（平成9）年7月30日初版第1刷発行<br>\n※本文については写真版を含む本書によった。また、改行等の全体の体裁については、「【新】校本宮澤賢治全集　第六巻」筑摩書房1996（平成8）年5月30日初版第1刷発行を参照した。<br>\n入力：田中敬三<br>\n校正：土屋隆<br>\n2006年7月26日作成<br>\n2019年1月21日修正<br>\n青空文庫作成ファイル：<br>\nこのファイルは、インターネットの図書館、青空文庫（https://www.aozora.gr.jp/）で作られました。入力、校正、制作にあたったのは、ボランティアの皆さんです。<br>\n<br>\n<br>\n</div>\n<div class=\"notation_notes\">\n<hr>\n<br>\n●表記について<br>\n<ul>\n\t<li>このファイルは W3C 勧告 XHTML1.1 にそった形式で作成されています。</li>\n\t<li>［＃…］は、入力者による注を表す記号です。</li>\n\t<li>「くの字点」をのぞくJIS X 0213にある文字は、画像化して埋め込みました。</li>\n</ul>\n</div>\n<div id=\"card\" style=\"display: block;\">\n<hr>\n<br>\n<a href=\"JavaScript:goLibCard();\" id=\"goAZLibCard\">●図書カード</a><script type=\"text/javascript\" src=\"./宮澤賢治 〔雨ニモマケズ〕_files/contents.js\"></script>\n<script type=\"text/javascript\" src=\"./宮澤賢治 〔雨ニモマケズ〕_files/golibcard.js\"></script>\n</div>\n",
    "categories": [],
    "draft": false
  },
  {
    "id": "26006613563419672",
    "customUrl": "2020/05/07/171333",
    "title": "マスタリングTCPIP 情報セキュリティ",
    "date": "2020-05-07T08:13:33.000Z",
    "editedDate": "2020-05-07T08:13:33.000Z",
    "text": "こっちは情報セキュリティ編\n",
    "categories": [],
    "draft": false
  },
  {
    "id": "26006613563419525",
    "customUrl": "2020/05/07/171307",
    "title": "マスタリングTCPIP 入門",
    "date": "2020-05-07T08:13:07.000Z",
    "editedDate": "2020-05-07T08:13:07.000Z",
    "text": "こっちは入門\n",
    "categories": [],
    "draft": false
  },
  {
    "id": "26006613563419396",
    "customUrl": "2020/05/07/171242",
    "title": "デザインパターン入門",
    "date": "2020-05-07T08:12:42.000Z",
    "editedDate": "2020-05-07T08:12:42.000Z",
    "text": "## テスト記事h2\n\nほげー\n",
    "categories": [],
    "draft": false
  },
  {
    "id": "26006613563261569",
    "customUrl": "NuxtTsV292",
    "title": "Nuxt.js(v2.9.2)とTypeScriptの開発環境を作る。",
    "date": "2019-09-27T03:30:00.000Z",
    "editedDate": "2020-05-07T01:01:57.000Z",
    "text": "Nuxt.jsとTypeScriptで開発環境を作るときのまとめ。(2019/9/5時点)\n\nお急ぎの方は、\n記事中の作業を行ったものを[nuxt.ts-template](https://github.com/basd4g/nuxt.ts-template)としてGitHubのリポジトリに上げたので、cloneないしForkして使ってほしい。\n\n## 目指すもの\n\ncreate nuxt-app したときと同じ環境で、下記のものが使えること。\nすぐにNuxt.jsとTypeScriptを用いて開発を始められる環境を構築する。\n\n- Nuxt.js v2.9.2\n- TypeScript\n- ESLint\n- nuxt-property-decorator\n\n### nuxt-property-decorator (vue-property-decorator)\n\nNuxt.jsとTypeScriptを組み合わせるときは、nuxt-property-decorator(vue-property-decorator)の利用が推奨されている。<a id=\"annotation-from-1\" href=\"#annotation-to-1\">^1</a>\n\nもともとのNuxt.jsとは書き方が変わる。参考文献にいくつか載せてあるので、もともとの書き方と比較しながら慣れると良さそう。<a id=\"annotation-from-2\" href=\"#annotation-to-2\">^2</a>\n\n今回は最後にインストールするので、一つ前の[ESLint](#3-eslint)までで止まればこれを使わない環境も構築できる。\n\n## 手順\n\n大まかには次の流れで進む。\nいくつかハマりどころがあったので、私の環境でうまく行った手順を残しておく。\n\n(特にESLintに文句を言われることが多く、最初いきあたりばったりで進めていたら沢山のパッケージをインストールしてしまった。\nこの記事は、その後不要なものがあまり入らないようにやり直した内容の記録である。)\n\n1. yarn create nuxt-app\n2. TypeScriptを入れる\n3. vue-property-decoratorを入れる\n4. ESLintを入れる\n\n<br><br>\n\n### 1. create nuxt-app\n\nNuxt.jsで環境構築するときにお決まりのcreate-nuxt-app。\nyarnだと、 `$ yarn create nuxt-app hogehoge` とする。\n\n```sh\n$ yarn create nuxt-app nuxt.ts-template\n# yarn create v1.17.3\n# create-nuxt-app v2.10.1\n\n# 今回は次のように設定した\n# Project name, Project description, Author name は適宜\n# package manager : Yarn\n# UI framework : None\n# custom server framework : None (Recommended)\n# Nuxt.js modules :\n# test framework : None\n# rendering mode : Universal (SSR)\n# development tools :\n\n$ cd nuxt.ts-template/\n# 以下全てカレントディレクトリは移動しない。編集するファイル名もnuxt.ts-template/をカレントディレクトリとして表記する。\n\n$ yarn dev\n# 起動できることを確認。ブラウザからNuxt.jsのロゴが見えればオーケー。(以下の起動確認も同様。)\n\n```\n\n<br><br>\n\n### 2. Install TypeScript\n\nまず、TypeScriptに関するパッケージをインストールする。\n\n```sh\n$ yarn add -D @nuxt/typescript-build\n$ yarn add @nuxt/typescript-runtime @nuxt/types\n$ mv nuxt.config.js nuxt.config.ts\n$ touch tsconfig.json\n```\n\nTypeScriptに合わせて以下の設定ファイルを2つ、ソースを3つ書き換える。\n\n- `package.json`\n- `tsconfig.json` (新たに作成)\n- `nuxt.config.ts`\n- `index.vue`\n- `Logo.vue`\n\n`./package.json`\n\n```diff\n...\n   \"scripts\": {\n-    \"dev\": \"nuxt\",\n-    \"build\": \"nuxt build\",\n-    \"start\": \"nuxt start\",\n-    \"generate\": \"nuxt generate\"\n+    \"dev\": \"nuxt-ts\",\n+    \"build\": \"nuxt-ts build\",\n+    \"start\": \"nuxt-ts start\",\n+    \"generate\": \"nuxt-ts generate\"\n   },\n...\n```\n\n`./tsconfig.json`\n\n```json\n{\n  \"compilerOptions\": {\n    \"target\": \"esnext\",\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"lib\": [\n      \"esnext\",\n      \"esnext.asynciterable\",\n      \"dom\"\n    ],\n    \"esModuleInterop\": true,\n    \"allowJs\": true,\n    \"sourceMap\": true,\n    \"strict\": true,\n    \"noEmit\": true,\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"~/*\": [\n        \"./*\"\n      ],\n      \"@/*\": [\n        \"./*\"\n      ]\n    },\n    \"types\": [\n      \"@types/node\",\n      \"@nuxt/types\"\n    ]\n  },\n  \"exclude\": [\n    \"node_modules\"\n  ]\n}\n```\n\n`./nuxt.config.ts`\n\n```diff\n+import {Configuration} from '@nuxt/types'\n\n-export default {\n+const nuxtConfig: Configuration = {\n...\n  buildModules: [\n+      '@nuxt/typescript-build'\n  ],\n...\n}\n+module.exports = nuxtConfig\n```\n\n`./pages/index.vue`\n\n```diff\n-<script>\n+<script lang=\"ts\">\n```\n\n`./components/Logo.vue`\n\n```diff\n...\n</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue'\n+export default Vue.extend({  \n+})\n+</script>\n+\n<style>\n...\n```\n\n```sh\n$ yarn dev\n# TypeScriptで動くことを確認。\n```\n\n<br><br>\n\n### 3. ESlint\n\nESLintと関連パッケージをインストールする。(今回はcreate nuxt-appでESLintをインストールしていないのでESLint自体もここでインストールする。)\n\n```sh\n$ yarn add eslint-config eslint\n$ yarn add -D @typescript-eslint/eslint-plugin @typescript-eslint/parser @nuxtjs/eslint-config-typescript\n$ touch .eslintrc.js\n```\n\nESLintの設定を以下の3ファイルに記述する。\n\n- `package.json`\n- `nuxt.config.ts`\n- `.eslintrc.js`\n\n`package.json`\n\n```diff\n...\n  \"scripts\": {\n    \"dev\": \"nuxt-ts\",\n    \"build\": \"nuxt-ts build\",\n    \"start\": \"nuxt-ts start\",\n-    \"generate\": \"nuxt-ts generate\"\n+    \"generate\": \"nuxt-ts generate\",\n+    \"lint\": \"eslint --ext .ts,.js,.vue --ignore-path .gitignore .\",\n+    \"lint:fix\": \"eslint --ext .ts,.js,.vue --ignore-path .gitignore . --fix\"\n  },\n...\n```\n\n`nuxt.config.ts`\n\n```diff\n...\n  build: {\n    /*\n    ** You can extend webpack config here\n    */\n+    /*\n    extend (config, ctx) {\n    }\n+   */\n...\n```\n\n`.eslintrc.js`\n\n```js\nmodule.exports = {\n  plugins: ['@typescript-eslint'],\n  parserOptions: {\n    parser: '@typescript-eslint/parser'\n  },\n  extends: [\n    '@nuxtjs/eslint-config-typescript'\n  ],\n  rules: {\n    '@typescript-eslint/no-unused-vars': 'error'\n  }\n}\n```\n\n```sh\n$ yarn lint:fix\n$ yarn dev\n# Lintが動いていることと、変わらず起動できることを確認。\n```\n\n<br><br>\n\n### 4.nuxt-property-decorator\n\nnuxt-property-decoratorをインストールする。(vue-property-decoratorでも良いかもしれない。)\n\n```sh\n$ yarn add nuxt-property-decorator\n```\n\nnuxt-property-decoratorに合わせて2ファイルを変更する。\n\n- `tsconfig.json` (デコレータの使用を宣言する。)\n- `index.vue` (デコレータを使った書き方に修正する。)\n\n`./tsconfig.json`\n\n```diff\n...\n    \"compilerOptions\": {\n...\n      \"types\": [\n        \"@types/node\",\n        \"@nuxt/types\"\n-      ]\n+      ],\n+      \"experimentalDecorators\": true\n    },\n...\n```\n\n`./pages/index.vue`\n\n```diff\n...\n<script lang=\"ts\">\n+import { Component, Vue } from 'vue-property-decorator'\nimport Logo from '~/components/Logo.vue'\n\n-export default {\n+@Component({\n  components: {\n    Logo\n  }\n-}\n+})\n+export default class Index extends Vue {\n+}\n</script>\n...\n```\n\n```sh\n$ yarn dev\n# デコレータを使った表記での起動を確認。\n```\n\nお疲れさまでした。\n\n## 参考\n\n重要参考文献\n\n1. [Qiita Nuxt.js 2.9でのTypeScript対応](https://qiita.com/iwata@github/items/a94c6d116a3e84911628)\n1. [Nuxt TypeScript Setup](typescript.nuxtjs.org/guide/setup.html#installation)\n\nその他の参考文献\n\n1. [Nuxt.js インストール](https://ja.nuxtjs.org/guide/installation/) ... yarn create nuxt-app について\n1. [GitHub eslint-config](https://github.com/nuxt/eslint-config) ... eslint-configのセットアップ\n1. [デコレータ | TypeScript 日本語ハンドブック | js STUDIO](https://js.studio-kingdom.com/typescript/handbook/decorators) ... `experimentalDecorators`について\n1. [TypeScriptではじめるVueコンポーネント（vue-class-component）](https://qiita.com/hako1912/items/8d9968d07748d20825f8)... vue-property-decorator(nuxt-property-decorator)を使った`@Component`デコレータの書き方\n1. [Nuxt.js+ExpressのプロジェクトをTypeScript化する](https://crieit.net/posts/Nuxt-js-Express-TypeScript) ... nuxt-property-decoratorを使った`@Component`デコレータの書き方\n1. [はじめてのvue-property-decorator](https://qiita.com/simochee/items/e5b77af4aa36bd0f32e5) ... vue-property-decorator(nuxt-property-decorator)を使ったデコレータの書き方\n\n<hr class=\"gt-article-annotation-horizontalrule\"/>\n\n<ul class=\"gt-article-annotation-list\">\n<li><a id=\"annotation-to-1\" href=\"#annotation-from-1\">^1</a>: <a href=\"https://ja.nuxtjs.org/guide/typescript/\">Nuxt.js TypeScriptサポート</a>に書かれている。(Nuxt.js v2.8までの記述のため、このページの内容のとおりではv2.9.2ではうまく行かない)</li>\n<li><a id=\"annotation-to-2\" href=\"#annotation-from-2\">^2</a>: <a href=\"https://github.com/kaorun343/vue-property-decorator\">GitHub vue-property-decorator</a>に記載がある。</li>\n</ul>\n",
    "categories": [
      "Nuxt.js",
      "TypeScript"
    ],
    "draft": false
  },
  {
    "id": "26006613563256659",
    "customUrl": "privateMethodTest-newPath",
    "title": "TypeScriptでprivate methodを外部から呼ぶ",
    "date": "2019-10-17T02:50:00.000Z",
    "editedDate": "2020-05-16T14:32:25.000Z",
    "text": "題名通りの話。\n\nTypeScriptにてprivate methodを単体テストするとき、直接呼べないので困ることがある。\nprivate methodを外部から呼べないのは正しいふるまいだが、テストプログラム側からも呼べないのは不便だ。裏技的ではあるが、TypeScriptの制限を回避して呼ぶ方法があるので紹介する。\n\n## 前提 TypeScriptのprivate\n\nJavaScript(ES6~)では、class記法が使える。  \nTypeScriptではclass記法で書かれたmethodにprivate修飾子をつけることが出来る。\nprivate修飾子をつけると、同じクラス内からしかmethodを呼べない。\n\n具体的な記法は下の例を参照のこと。\n\n## 解決策\n\nTypeScriptのprivate修飾子によるアクセス制限を回避する方法は2つある。  \n\n`hogeClass.privateMethod()`だと呼べないときを例に取ると\n\n### 1. brackets記法\n\n`hogeClass['privateMethod']()`と呼ぶ。\n\n### 2. クラスをanyでキャストする\n\n`;(hogeClass as any).privateMethod()`と呼ぶ。\n\n前文との間に`;`を入れないとエラーを出すので注意。\n\n## 例\n\n```ts\n// TypeScript v3.5.3\n\nclass HogeClass {\n\n  private privateMethod (): void {\n    console.log(\"private method\")\n  }\n\n  public publicMethod ():void {\n    console.log('public method')\n\n    //呼べる\n    this.privateMethod()\n  }\n}\n\nconst hogeClass = new HogeClass()\n\n// 呼べる\nhogeClass.publicMethod()\n\n// 呼べない コンパイルエラー\n// hogeClass.privateMethod()\n\n// 呼べる\nhogeClass['privateMethod']()\n\n// 呼べる セミコロンが必要\n;(hogeClass as any).publicMethod()\n```\n\n## 注意\n\nTypeScriptの制限をすり抜けるということは、methodが存在するかどうか評価されないので、typoしたり存在しないmethodを呼ぶ危険性がある。\n\nテストで使うのは仕方ないかもしれないけれど、基本はあまり使うべきではなさそう。\n\n## 感想\n\nanyでキャストして呼べるのはまだいいとして、brackets記法で呼べてしまうのは裏技感がすごい。\n最近TypeScriptに入門したが、型があるのはありがたいといっても、意外と実行時にこのような抜けがあると感じてしまうことがあったり。\n\nまぁjsやからな。\n\n## 参考\n\n- [Typescriptでprivateメソッドをテストする](qiita.com/hitochan777/items/f68e77f13becd24e2691)\n",
    "categories": [
      "TypeScript",
      "JavaScript",
      "テスト"
    ],
    "draft": false
  },
  {
    "id": "26006613562946671",
    "customUrl": "2020/05/06/190022",
    "title": "No Title",
    "date": "2020-05-06T10:00:22.000Z",
    "editedDate": "2020-05-06T10:00:23.000Z",
    "text": "# hatenablog-post\n\nPost article of markdown file to hatena-blog.\n\n```sh\n$ yarn global add basd4g/hatenablog-post\n$ export HATENA_USER=...\n$ export HATENA_API_KEY=...\n$ export HATENA_BLOG_ID=...\n\n$ hatenablog-post -f path/to/markdown\n```\n\n",
    "categories": [],
    "draft": false
  },
  {
    "id": "26006613562856760",
    "customUrl": "hello",
    "title": "ブログを書く意義",
    "date": "2019-09-16T16:37:00.000Z",
    "editedDate": "2020-05-16T17:51:12.000Z",
    "text": "TL;DR 初投稿に際して自分に向けたポエム\n\n記事を書くためにブログを作った。\n\nブログをはじめるにあたり、はじめるに至った理由を綴る。\n(自分に書く価値を再認識させることで、記事を書く動機を強める狙い)\n\n## ブログを書く意義\nasdfas\n### 文章執筆\n\nわかりやすく完結な文章を書くには推敲した上である程度時間を掛ける必要がある。\n文章の執筆能力を高めるためにブログを書くことにした。\n\n### 思考を整理する\n\n最近アウトプットすることの重要性に気づいた。\n\nアウトプットする事柄は、自分の中で理解し整理されているものでなければならない。\n今までの私は、こと情報系に関してインプットの機会が多かった。\nだからこそ自分の文章を公開することで、インプットした内容を整理する機会としたい。\n\n### 誰かのために\n\n私は開発していて詰まることがよくある。例えば「ライブラリを入れたけど動かない」「エラーを吐いて動かない」等。\n\nこのような私が開発していて詰まったことと解決策を記録することで、同じ問題を抱えている誰か(もしくは未来の私)に向けたヒントになればという思いがある。\n\n私が解決策を示す文章を書く手間が、私や誰かが問題解決にかける手間より小さいならば、とても価値のある記事がかけたということである。\n\n## まとめ\n\nそんなわけで、次の目的で思ったことや知ったことを書き留めていきたい。\n\n- 文章執筆の場\n- 思考を整理する場\n- 誰かのためにハウツーを記録する場\n\n  \n",
    "categories": [
      "ポエム"
    ],
    "draft": false
  }
]
